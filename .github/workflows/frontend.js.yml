# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: frontend deploy

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - 'frontend/**'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set CI environment variable to false
      run: echo "CI=false" >> $GITHUB_ENV
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'frontend'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Build
      run: |
        cd frontend
        npm run build

    - name: Set up Git
      uses: actions/checkout@v2

    - name: Push to Build Repo
      run: |
        cd frontend/build
        git remote add build git@github.com:Docker-J/OCCE_Frontend_Build.git
        git push -u build main

    # - name: Update on Lightsail
    #   run: |
    #     ssh ~~
    #     cd OCCE_FRONTEND_BUILD
    #     git pull
    #     sudo systemctl nginx restart

    # - name: Upgrade AWS CLI version and setup lightsailctl
    #   run: |
    #     aws --version
    #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    #     unzip awscliv2.zip
    #     sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
    #     which aws
    #     aws --version
    #     sudo curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "/usr/local/bin/lightsailctl"
    #     sudo chmod +x /usr/local/bin/lightsailctl

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     role-to-assume: ${{ secrets.AWS_ARN_OICN_ACCESS }}
    #     role-session-name: Github
    #     aws-region: us-west-2
