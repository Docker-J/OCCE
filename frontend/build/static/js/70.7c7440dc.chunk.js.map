{"version":3,"file":"static/js/70.7c7440dc.chunk.js","mappings":"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","sources":["common/AdminComponent.js","pages/News/Photos/MeditationONComp.js","pages/News/Photos/PhotosUploadModal.js","pages/News/Photos/Photos.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst AdminComponent = (props) => {\r\n  const user = useSelector((state) => state.authToken.admin);\r\n\r\n  return user && props.children;\r\n};\r\n\r\nexport default AdminComponent;\r\n","import { ImageListItem, ImageListItemBar } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MeditationONComp = ({ photos }) => {\r\n  return photos.map((post) => (\r\n    <ImageListItem key={post.id} component={Link} to={post.id}>\r\n      <img\r\n        // src={`${\r\n        //   item.data().images[0]\r\n        // }?w=164&h=164&fit=crop&auto=format`}\r\n        src={post.cover}\r\n        // onClick={}\r\n        // srcSet={`${\r\n        //   item.data().images[0]\r\n        // }?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n        alt=\"test\"\r\n        loading=\"lazy\"\r\n      />\r\n      <ImageListItemBar title={post.title} />\r\n    </ImageListItem>\r\n  ));\r\n};\r\n\r\nexport const MemoizedMeditationONComp = memo(MeditationONComp);\r\n","import { Box, Button, Modal, TextField } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nconst PhotosUploadModal = ({ isOpen, onClose }) => {\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"800px\",\r\n    height: \"800px\",\r\n    bgcolor: \"#ffffff\",\r\n    border: \"0.1px solid #f57c00\",\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const [albumURL, setAlbumURL] = useState(\"\");\r\n\r\n  async function post() {\r\n    await axios.post(\"/api/photos/uploadAlbum\", {\r\n      url: albumURL,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={handleClose}\r\n      // aria-labelledby=\"modal-modal-title\"\r\n      // aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style} bgcolor=\"white\">\r\n        <TextField\r\n          type=\"url\"\r\n          helperText=\"Enter the album URL\"\r\n          onChange={(event) => setAlbumURL(event.currentTarget.value)}\r\n        />\r\n\r\n        <Button onClick={post} variant=\"contained\" component=\"label\">\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PhotosUploadModal;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport {\r\n  CircularProgress,\r\n  Fab,\r\n  ImageList,\r\n  Stack,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport axios from \"axios\";\r\nimport { MemoizedMeditationONComp } from \"./MeditationONComp\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport useModals from \"../../../util/useModal\";\r\nimport AdminComponent from \"../../../common/AdminComponent\";\r\nimport Footer from \"../../../header/Footer\";\r\n\r\nimport \"../../NextGen/NextGen.css\";\r\nimport PhotosUploadModal from \"./PhotosUploadModal\";\r\n\r\nconst PAGE_SIZE = 12;\r\n\r\nconst titleBackground = {\r\n  backgroundImage:\r\n    'linear-gradient(rgba(0, 0, 0, 0.30), rgba(0, 0, 0, 0.30)), url(\"/img/WeeklyUpdate.jpg\")',\r\n};\r\n\r\nconst Photos = () => {\r\n  const matches = useMediaQuery(\"(min-width:1200px)\");\r\n  const { openModal } = useModals();\r\n\r\n  const [photos, setPhotos] = useState([]);\r\n  const [end, setEnd] = useState(false);\r\n  const [restored, setRestored] = useState(true);\r\n\r\n  const getPhotos = async () => {\r\n    console.log(\"test getPosts\");\r\n\r\n    const result = await axios.get(\r\n      `/api/photos/getPhotos${\r\n        photos.length === 0\r\n          ? \"\"\r\n          : `?lastVisible=${photos.at(-1).id}&timeStamp=${\r\n              photos.at(-1).Timestamp\r\n            }`\r\n      }`\r\n    );\r\n\r\n    if (result.data.length > 0) {\r\n      setPhotos((prev) => [...prev, ...result.data]);\r\n    } else {\r\n      setEnd(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (photos.length % PAGE_SIZE !== 0) {\r\n      setEnd(true);\r\n    }\r\n  }, [photos]);\r\n\r\n  useEffect(() => {\r\n    window.onpopstate = () => {\r\n      setRestored(true);\r\n      console.log(\"test restore\");\r\n      setPhotos(JSON.parse(sessionStorage.getItem(\"posts\")));\r\n    };\r\n    setRestored(false);\r\n    return () => {\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (restored !== null && !restored) {\r\n      getPhotos();\r\n    }\r\n  }, [restored]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      sessionStorage.setItem(\"photos\", JSON.stringify(photos));\r\n    };\r\n  });\r\n\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current && !end && photos.length >= 12) {\r\n      setTimeout(() => {\r\n        try {\r\n          const contentHeight = scrollRef.current.clientHeight;\r\n          const screenHeight = window.innerHeight - 500;\r\n\r\n          console.log(\"test content\", contentHeight);\r\n          console.log(\"test screen\", screenHeight);\r\n\r\n          if (contentHeight > 100 && contentHeight < screenHeight) {\r\n            getPhotos();\r\n          }\r\n        } catch (error) {}\r\n      }, 500);\r\n    }\r\n\r\n    // re-run effect when items change\r\n  }, [photos]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title-wrapper\" style={titleBackground}>\r\n        <div className=\"title\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight={830}\r\n            sx={{ letterSpacing: \"0.4em\", pl: \"0.4em\", color: \"white\" }}\r\n          >\r\n            교회사진\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div className=\"container\">\r\n          {photos.length === 0 ? (\r\n            <Stack alignItems=\"center\">\r\n              <CircularProgress />\r\n            </Stack>\r\n          ) : (\r\n            <InfiniteScroll\r\n              dataLength={photos.length}\r\n              next={getPhotos}\r\n              hasMore={!end}\r\n              loader={<CircularProgress />}\r\n              scrollThreshold={1}\r\n              style={{ overflowY: \"hidden\" }}\r\n            >\r\n              {\r\n                <ImageList ref={scrollRef} cols={matches ? 4 : 3} gap={2.5}>\r\n                  <MemoizedMeditationONComp photos={photos} />\r\n                </ImageList>\r\n              }\r\n            </InfiniteScroll>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AdminComponent>\r\n        <Fab\r\n          variant=\"primary\"\r\n          style={{ position: \"fixed\", right: \"2vw\", bottom: \"3vh\" }}\r\n          onClick={() => openModal(PhotosUploadModal, {})}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </AdminComponent>\r\n\r\n      {end && <Footer />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n"],"names":["props","useSelector","state","authToken","admin","children","MeditationONComp","_ref","photos","map","post","_jsxs","ImageListItem","component","Link","to","id","_jsx","src","cover","alt","loading","ImageListItemBar","title","MemoizedMeditationONComp","memo","isOpen","onClose","albumURL","setAlbumURL","useState","Modal","open","handleClose","Box","sx","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","TextField","type","helperText","onChange","event","currentTarget","value","Button","onClick","async","axios","url","variant","titleBackground","backgroundImage","Photos","matches","useMediaQuery","openModal","useModals","setPhotos","end","setEnd","restored","setRestored","getPhotos","console","log","result","get","concat","length","at","Timestamp","data","prev","useEffect","window","onpopstate","JSON","parse","sessionStorage","getItem","setItem","stringify","scrollRef","useRef","current","setTimeout","contentHeight","clientHeight","screenHeight","innerHeight","error","_Fragment","className","style","Typography","fontWeight","letterSpacing","pl","color","Stack","alignItems","CircularProgress","InfiniteScroll","dataLength","next","hasMore","loader","scrollThreshold","overflowY","ImageList","ref","cols","gap","AdminComponent","Fab","right","bottom","PhotosUploadModal","AddIcon","Footer"],"sourceRoot":""}