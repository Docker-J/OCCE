{"version":3,"file":"static/js/474.f57e351e.chunk.js","mappings":"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","sources":["api/firebase.js","components/Announcement/TextEditor.js","components/Announcement/BoardPost.js","pages/Announcements/Announcements.js"],"sourcesContent":["import { initializeApp, getApp, getApps } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCipnxl2pZyIzYgXQd8a5oNfo0ZWJGfLec\",\r\n  authDomain: \"church-4385c.firebaseapp.com\",\r\n  projectId: \"church-4385c\",\r\n  storageBucket: \"church-4385c.appspot.com\",\r\n  messagingSenderId: \"581090651615\",\r\n  appId: \"1:581090651615:web:692b95b77fecec4ca7286a\",\r\n  measurementId: \"G-CP6DP4D6WT\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebase = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const firebaseInstance = firebase;","import { useState } from \"react\";\r\n\r\nimport Editor from \"ckeditor5-custom-build/build/ckeditor\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\n\r\nconst TextEditor = ({ getBody }) => {\r\n  return (\r\n    <div style={{ maxWidth: \"1500px\", alignItems: \"center\" }}>\r\n      <CKEditor\r\n        editor={Editor}\r\n        data=\"<p>Hello from CKEditor 5!</p>\"\r\n        onReady={(editor) => {\r\n          // You can store the \"editor\" and use when it is needed.\r\n          console.log(\"Editor is ready to use!\", editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n          const data = editor.getData();\r\n          getBody(data);\r\n        }}\r\n        // onBlur={(event, editor) => {\r\n        //   console.log(\"Blur.\", editor);\r\n        // }}\r\n        // onFocus={(event, editor) => {\r\n        //   console.log(\"Focus.\", editor);\r\n        // }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import { Button, TextField } from \"@mui/material\";\r\nimport TextEditor from \"./TextEditor\";\r\nimport { useState } from \"react\";\r\n\r\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport { db } from \"../../api/firebase\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nconst BoardPost = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [postButton, setPostButton] = useState(false);\r\n\r\n  const getBody = (body) => {\r\n    setBody(body);\r\n  };\r\n\r\n  async function postAnnouncement() {\r\n    await addDoc(collection(db, \"Announcement\"), {\r\n      title: title,\r\n      body: body,\r\n      date: serverTimestamp(),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPostButton(title.trim() === \"\" || body.trim() === \"\");\r\n  }, [{ title, body }]);\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id=\"filled-basic\"\r\n        label=\"Title\"\r\n        variant=\"outlined\"\r\n        onChange={(event) => setTitle(event.target.value)}\r\n      />\r\n      <TextEditor body={body} getBody={getBody} />\r\n      <Button\r\n        variant=\"outlined\"\r\n        disabled={postButton}\r\n        onClick={postAnnouncement}\r\n      >\r\n        Post\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={props.handleClose}>\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardPost;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Fab,\r\n  Modal,\r\n  Pagination,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  useScrollTrigger,\r\n} from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  orderBy,\r\n  query,\r\n  limit,\r\n  startAfter,\r\n} from \"firebase/firestore\";\r\n\r\nimport { db } from \"../../api/firebase\";\r\n\r\nimport \"./Announcements.css\";\r\nimport BoardPost from \"../../components/Announcement/BoardPost\";\r\n\r\nconst Announcements = () => {\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const getBody = (body) => {\r\n    setBody(body);\r\n  };\r\n\r\n  const [numberOfAnnouncements, setNumberOfAnnouncements] = useState(1);\r\n  const [announcements, setAnnouncements] = useState(null);\r\n  const [pages, setPages] = useState(0);\r\n  const [prevPage, setPrevPage] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const lastVisible =\r\n    announcements && announcements.docs[announcements.docs.length - 1];\r\n\r\n  const handleOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  async function getInitialAnnouncements() {\r\n    const numberOfAnnouncements = await getDoc(\r\n      doc(db, \"Misc\", \"Announcements\")\r\n    );\r\n    setNumberOfAnnouncements(numberOfAnnouncements.data().posts);\r\n\r\n    const querySnap = await getDocs(\r\n      query(collection(db, \"Announcement\"), orderBy(\"date\", \"desc\"), limit(10))\r\n    );\r\n    setAnnouncements(querySnap);\r\n  }\r\n\r\n  async function getAnnouncements() {\r\n    const querySnap = await getDocs(\r\n      query(\r\n        collection(db, \"Announcement\"),\r\n        orderBy(\"date\", \"desc\"),\r\n        startAfter(lastVisible),\r\n        limit(10)\r\n      )\r\n    );\r\n    setAnnouncements(querySnap);\r\n  }\r\n\r\n  async function postAnnouncement() {\r\n    await setDoc(doc(db, \"Misc\", \"Announcements\"), {\r\n      posts: 15,\r\n    });\r\n  }\r\n\r\n  function pageChnageHandler(event, pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInitialAnnouncements();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAnnouncements();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (announcements !== null) {\r\n      if (numberOfAnnouncements % 10 !== 0) {\r\n        setPages(Math.floor(numberOfAnnouncements / 10 + 1));\r\n      } else {\r\n        setPages(Math.floor(numberOfAnnouncements / 10));\r\n      }\r\n    }\r\n  }, [announcements]);\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"80vw\",\r\n    maxWidth: \"1500px\",\r\n    height: \"80vh\",\r\n    bgcolor: \"#ffffff\",\r\n    border: \"0.1px solid #f57c00\",\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"board\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"1500px\",\r\n        }}\r\n      >\r\n        <h1>공지사항</h1>\r\n\r\n        <div>\r\n          <TableContainer\r\n            className=\"table\"\r\n            component={Paper}\r\n            sx={{ width: \"85%\" }}\r\n          >\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" width=\"80%\">\r\n                    제목\r\n                  </TableCell>\r\n                  <TableCell align=\"center\"> 작성일 </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {announcements ? (\r\n                  announcements.docs.map((announcement) => (\r\n                    <TableRow\r\n                      component={Link}\r\n                      to={\r\n                        \"/announcements/announcement?docID=\" + announcement.id\r\n                      }\r\n                      key={announcement.id}\r\n                      sx={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <TableCell>{announcement.data().title}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {announcement\r\n                          .data()\r\n                          .date.toDate()\r\n                          .toLocaleDateString(\"en-US\")}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                ) : (\r\n                  <TableRow>\r\n                    <CircularProgress />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <Pagination\r\n            className=\"pagination\"\r\n            count={pages}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            hideNextButton={pages === 1}\r\n            hidePrevButton={pages === numberOfAnnouncements}\r\n            onChange={(event, pageNumber) =>\r\n              pageChnageHandler(event, pageNumber)\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <Fab\r\n        variant=\"primary\"\r\n        style={{ position: \"fixed\", right: \"2vw\", bottom: \"3vh\" }}\r\n        onClick={handleOpen}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        // aria-labelledby=\"modal-modal-title\"\r\n        // aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style} bgcolor=\"white\">\r\n          <BoardPost handleClose={handleClose} />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Announcements;\r\n"],"names":["db","getApps","length","getApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","_ref","getBody","_jsx","style","maxWidth","alignItems","children","CKEditor","editor","Editor","data","onReady","console","log","onChange","event","getData","props","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","_useState5","_useState6","postButton","setPostButton","_postAnnouncement","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","addDoc","collection","date","serverTimestamp","stop","apply","arguments","useEffect","trim","_jsxs","TextField","id","label","variant","target","value","TextEditor","Button","disabled","onClick","handleClose","numberOfAnnouncements","setNumberOfAnnouncements","announcements","setAnnouncements","_useState7","_useState8","pages","setPages","_useState9","_useState10","_useState11","_useState12","currentPage","setCurrentPage","_useState13","_useState14","openModal","setOpenModal","lastVisible","docs","_getInitialAnnouncements","querySnap","getDoc","doc","sent","posts","getDocs","query","orderBy","limit","_getAnnouncements","_callee2","_context2","startAfter","getInitialAnnouncements","getAnnouncements","Math","floor","_Fragment","className","width","TableContainer","component","Paper","sx","Table","TableHead","TableRow","TableCell","align","TableBody","map","announcement","Link","to","textDecoration","toDate","toLocaleDateString","CircularProgress","Pagination","count","color","hideNextButton","hidePrevButton","pageNumber","pageChnageHandler","Fab","position","right","bottom","AddIcon","Modal","open","onClose","Box","top","left","transform","height","bgcolor","border","boxShadow","p","BoardPost"],"sourceRoot":""}