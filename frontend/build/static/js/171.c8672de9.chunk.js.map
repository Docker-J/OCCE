{"version":3,"file":"static/js/171.c8672de9.chunk.js","mappings":"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","sources":["common/AdminComponent.js","components/News/WeeklyUpdate/ButtonDatePicker.js","components/News/WeeklyUpdate/PDFReader.js","components/News/WeeklyUpdate/BulletinUploadModal.js","pages/News/WeeklyUpdate/WeeklyUpdate.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst AdminComponent = (props) => {\r\n  const user = useSelector((state) => state.authToken.admin);\r\n\r\n  return user && props.children;\r\n};\r\n\r\nexport default AdminComponent;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { format, isSunday } from \"date-fns\";\r\n\r\nconst ButtonField = (props) => {\r\n  const {\r\n    setIsDatePickerOpen,\r\n    id,\r\n    disabled,\r\n    value,\r\n    InputProps: { ref } = {},\r\n    inputProps: { \"aria-label\": ariaLabel } = {},\r\n  } = props;\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      id={id}\r\n      disabled={disabled}\r\n      ref={ref}\r\n      aria-label={ariaLabel}\r\n      onClick={() => setIsDatePickerOpen?.((prev) => !prev)}\r\n    >\r\n      {format(value, \"yyyy/MM/dd\")}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ButtonDatePicker = (props) => {\r\n  const [isDatePickerOpen, setIsDatePickerOpen] = useState(false);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        slots={{ field: ButtonField }}\r\n        slotProps={{\r\n          field: { setIsDatePickerOpen },\r\n          popper: { placement: \"bottom\" },\r\n        }}\r\n        {...props}\r\n        open={isDatePickerOpen}\r\n        onClose={() => setIsDatePickerOpen(false)}\r\n        shouldDisableDate={(date) => !isSunday(date)}\r\n        disableHighlightToday\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport default ButtonDatePicker;\r\n","import { Button, ButtonGroup, CircularProgress } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { pdfjs, Page, Document } from \"react-pdf\";\r\n\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport \"./PDFReader.css\";\r\n\r\n// pdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n//   \"pdfjs-dist/build/pdf.worker.min.js\",\r\n//   import.meta.url\r\n// ).toString();\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nfunction PDFReader({ file, documentDimension }) {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [scale, setScale] = useState(1);\r\n\r\n  const add = () => {\r\n    setScale((prev) => prev + 0.2);\r\n  };\r\n\r\n  const minus = () => {\r\n    if (scale !== 1) {\r\n      setScale((prev) => prev - 0.2);\r\n    }\r\n  };\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPageNumber(1);\r\n  }, [file]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <ButtonGroup id=\"scaleButton\" sx={{ my: \"1em\" }}>\r\n        <Button onClick={add} variant=\"outlined\">\r\n          +\r\n        </Button>\r\n        <Button onClick={minus} variant=\"outlined\" disabled={scale <= 1}>\r\n          -\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      <Document\r\n        file={file}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n        loading={\r\n          <div\r\n            style={{\r\n              height: documentDimension.height,\r\n              width: documentDimension.width,\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </div>\r\n        }\r\n      >\r\n        <Page\r\n          renderTextLayer={false}\r\n          className=\"page\"\r\n          scale={scale}\r\n          height={documentDimension.height}\r\n          width={documentDimension.width}\r\n          pageNumber={pageNumber}\r\n          loading={\r\n            <div\r\n              style={{\r\n                height: documentDimension.height,\r\n                width: documentDimension.width,\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          }\r\n        />\r\n      </Document>\r\n\r\n      <p style={{ color: \"black\" }}>\r\n        Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n      </p>\r\n\r\n      <ButtonGroup id=\"pageButton\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={pageNumber <= 1}\r\n          onClick={previousPage}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={pageNumber >= numPages}\r\n          onClick={nextPage}\r\n        >\r\n          Next\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PDFReader;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Button, Modal, Typography } from \"@mui/material\";\r\nimport ButtonDatePicker from \"./ButtonDatePicker\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"80vw\",\r\n  height: \"90vh\",\r\n  maxWidth: \"1300px\",\r\n  bgcolor: \"#ffffff\",\r\n  boxShadow: 24,\r\n  borderRadius: \"0.5em\",\r\n  p: 1,\r\n  py: 3,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nconst MIN_DATE = \"2022/04/03\";\r\n\r\nconst BulletinUploadModal = (props) => {\r\n  const [selectedDate, setSelectedDate] = useState();\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n\r\n  const test = useRef(null);\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (test.current) {\r\n      setHeight(test.current.clientHeight);\r\n    }\r\n  }, [fileToUpload]);\r\n\r\n  console.log(height);\r\n\r\n  const handleClose = () => {\r\n    setFileToUpload(null);\r\n    props.setModalState(false);\r\n  };\r\n\r\n  const nextSunday = () => {\r\n    const today = new Date();\r\n    today.setDate(today.getDate() + ((-1 - today.getDay() + 7) % 7) + 1);\r\n    setSelectedDate(today);\r\n  };\r\n\r\n  const handleChangeFile = (file) => {\r\n    console.log(file);\r\n    setFileToUpload(file[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    nextSunday();\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: {\r\n      \"application/pdf\": [],\r\n    },\r\n    onDrop: (acceptedFiles) => {\r\n      handleChangeFile(acceptedFiles);\r\n    },\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal open={props.open} onClose={handleClose}>\r\n      <Box sx={style} bgcolor=\"white\">\r\n        <h2>Choose Date</h2>\r\n\r\n        <ButtonDatePicker\r\n          value={selectedDate}\r\n          minDate={new Date(MIN_DATE)}\r\n          onChange={setSelectedDate}\r\n        />\r\n\r\n        <div ref={test} style={{ height: \"60%\" }}>\r\n          <p>{fileToUpload ? fileToUpload.name : null}</p>\r\n          <Document file={fileToUpload}>\r\n            <Page\r\n              renderTextLayer={false}\r\n              className=\"page\"\r\n              height={height - 80}\r\n              // width={100}\r\n              pageNumber={1}\r\n            />\r\n          </Document>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: \"95%\",\r\n            height: \"15%\",\r\n            border: \"1pt dotted #f57c00\",\r\n            borderRadius: \"1em\",\r\n            overflowY: \"auto\",\r\n            marginBottom: \"1em\",\r\n          }}\r\n          {...getRootProps()}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <Box\r\n            sx={{\r\n              position: \"relative\",\r\n              height: \"100%\",\r\n              widht: \"100%\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            >\r\n              <AddCircleOutlineIcon fontSize=\"large\" color=\"primary\" />\r\n              <Typography>Click or Drag File to here</Typography>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n\r\n        <p>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => props.onModalUpload(fileToUpload, selectedDate)}\r\n          >\r\n            Upload\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </p>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BulletinUploadModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Alert,\r\n  CircularProgress,\r\n  Fab,\r\n  IconButton,\r\n  Snackbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport ButtonDatePicker from \"../../../components/News/WeeklyUpdate/ButtonDatePicker\";\r\nimport PDFReader from \"../../../components/News/WeeklyUpdate/PDFReader\";\r\nimport BulletinUploadModal from \"../../../components/News/WeeklyUpdate/BulletinUploadModal\";\r\n\r\nimport { useLoaderData, useNavigate, useRevalidator } from \"react-router-dom\";\r\nimport AdminComponent from \"../../../common/AdminComponent\";\r\nimport { add, compareAsc, format, sub } from \"date-fns\";\r\n\r\nimport \"./WeeklyUpdate.css\";\r\nimport \"../../NextGen/NextGen.css\";\r\n\r\nconst titleBackground = {\r\n  backgroundImage:\r\n    'linear-gradient(rgba(0, 0, 0, 0.30), rgba(0, 0, 0, 0.30)), url(\"/img/WeeklyUpdate.jpg\")',\r\n};\r\n\r\nconst WeeklyUpdate = () => {\r\n  const navigate = useNavigate();\r\n  let revalidator = useRevalidator();\r\n\r\n  const { maxDate, queryDate } = useLoaderData();\r\n  const minDate = new Date(\"2022/04/03\");\r\n\r\n  const [bulletin, setBulletin] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(queryDate);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [isSuccessSnackBarOpen, setIsSuccessSnackBarOpen] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setIsSuccessSnackBarOpen(false);\r\n  };\r\n\r\n  // Get Bulletin from Firestore\r\n  const loadFile = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await axios.get(\"/api/WeeklyUpdate/GetBulletin\", {\r\n        params: {\r\n          date: format(selectedDate, \"yyyyMMdd\"),\r\n        },\r\n      });\r\n\r\n      const byteArray = new Uint8Array(Object.values(result.data));\r\n      const pdf = new Blob([byteArray.buffer], { type: \"application/pdf\" });\r\n\r\n      setBulletin(pdf);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const closeModal = () => {\r\n    setModalState(false);\r\n  };\r\n\r\n  const uploadBulletin = async (file, date) => {\r\n    try {\r\n      const form = new FormData();\r\n      form.append(\"images\", file);\r\n      form.append(\"date\", format(selectedDate, \"yyyyMMdd\"));\r\n      const res = await axios.put(\"/api/WeeklyUpdate/PostBulletin/\", form, {\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data`,\r\n        },\r\n      });\r\n\r\n      console.log(res.data);\r\n      // setMaxDate(new Date(res.data.replace(/-/g, \"/\")));\r\n      setSelectedDate(date);\r\n      revalidator.revalidate(); //get new maxdate\r\n      closeModal();\r\n      setIsSuccessSnackBarOpen(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const previousBulletin = () => {\r\n    setSelectedDate((prev) => sub(prev, { days: 7 }));\r\n  };\r\n\r\n  const nextBulletin = () => {\r\n    setSelectedDate((prev) => add(prev, { days: 7 }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedDate != null) {\r\n      loadFile();\r\n      navigate(\"/weeklyupdate/\" + format(selectedDate, \"yyyyMMdd\"));\r\n    }\r\n  }, [selectedDate, loadFile, navigate]);\r\n\r\n  const width = isMobile\r\n    ? document.documentElement.clientWidth\r\n    : window.innerWidth;\r\n  const height = isMobile\r\n    ? document.documentElement.clientHeight\r\n    : window.innerHeight;\r\n\r\n  const [documentDimension, detectHW] = useState({\r\n    width: height / width >= 16 / 10 ? width - 30 : null,\r\n    height: height / width < 16 / 10 ? height : null,\r\n  });\r\n\r\n  const detectSize = () => {\r\n    const width = isMobile\r\n      ? document.documentElement.clientWidth\r\n      : window.innerWidth;\r\n    const height = isMobile\r\n      ? document.documentElement.clientHeight\r\n      : window.innerHeight;\r\n\r\n    detectHW({\r\n      width: height / width >= 16 / 10 ? width - 30 : null,\r\n      height: height / width < 16 / 10 ? height : null,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", detectSize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", detectSize);\r\n    };\r\n  }, [documentDimension]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title-wrapper\" style={titleBackground}>\r\n        <div className=\"title\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight={830}\r\n            sx={{ letterSpacing: \"0.4em\", pl: \"0.4em\", color: \"white\" }}\r\n          >\r\n            주보\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div className=\"container\">\r\n          <>\r\n            <IconButton\r\n              id=\"previousBulletin\"\r\n              onClick={previousBulletin}\r\n              disabled={compareAsc(selectedDate, minDate) === 0 || loading}\r\n            >\r\n              <ArrowBackIosIcon />\r\n            </IconButton>\r\n\r\n            <ButtonDatePicker\r\n              value={selectedDate}\r\n              minDate={minDate}\r\n              maxDate={maxDate}\r\n              onChange={setSelectedDate}\r\n            />\r\n\r\n            <IconButton\r\n              id=\"nextBulletin\"\r\n              onClick={nextBulletin}\r\n              disabled={compareAsc(selectedDate, maxDate) === 0 || loading}\r\n            >\r\n              <ArrowForwardIosIcon />\r\n            </IconButton>\r\n          </>\r\n          {loading ? (\r\n            <div style={{ height: \"100vh\" }}>\r\n              <CircularProgress sx={{ mt: 2 }} />\r\n            </div>\r\n          ) : (\r\n            <PDFReader file={bulletin} documentDimension={documentDimension} />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AdminComponent>\r\n        <Fab\r\n          id=\"uploadBulletinButton\"\r\n          variant=\"extended\"\r\n          onClick={() => setModalState(true)}\r\n        >\r\n          <UploadIcon sx={{ mr: 1 }} />\r\n          Upload\r\n        </Fab>\r\n\r\n        <BulletinUploadModal\r\n          open={modalState}\r\n          onModalUpload={uploadBulletin}\r\n          setModalState={setModalState}\r\n        />\r\n\r\n        <Snackbar\r\n          open={isSuccessSnackBarOpen}\r\n          autoHideDuration={8000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert severity=\"success\" onClose={handleClose}>\r\n            Uploaded Succesfully!\r\n          </Alert>\r\n        </Snackbar>\r\n      </AdminComponent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeeklyUpdate;\r\n"],"names":["props","useSelector","state","authToken","admin","children","ButtonField","setIsDatePickerOpen","id","disabled","value","InputProps","ref","inputProps","ariaLabel","_jsx","Button","variant","size","onClick","prev","format","isDatePickerOpen","useState","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slots","field","slotProps","popper","placement","open","onClose","shouldDisableDate","date","isSunday","disableHighlightToday","pdfjs","GlobalWorkerOptions","workerSrc","concat","version","_ref","file","documentDimension","numPages","setNumPages","pageNumber","setPageNumber","scale","setScale","changePage","offset","prevPageNumber","useEffect","_jsxs","style","display","flexDirection","alignItems","ButtonGroup","sx","my","add","minus","Document","onLoadSuccess","_ref2","loading","height","width","CircularProgress","Page","renderTextLayer","className","color","position","top","left","transform","maxWidth","bgcolor","boxShadow","borderRadius","p","py","justifyContent","selectedDate","setSelectedDate","fileToUpload","setFileToUpload","test","useRef","setHeight","current","clientHeight","console","log","handleClose","setModalState","nextSunday","today","Date","setDate","getDate","getDay","getRootProps","getInputProps","useDropzone","accept","onDrop","acceptedFiles","multiple","Modal","Box","ButtonDatePicker","minDate","onChange","name","border","overflowY","marginBottom","widht","AddCircleOutlineIcon","fontSize","Typography","onModalUpload","titleBackground","backgroundImage","WeeklyUpdate","navigate","useNavigate","revalidator","useRevalidator","maxDate","queryDate","useLoaderData","bulletin","setBulletin","modalState","isSuccessSnackBarOpen","setIsSuccessSnackBarOpen","setLoading","event","reason","loadFile","useCallback","async","result","axios","get","params","byteArray","Uint8Array","Object","values","data","pdf","Blob","buffer","type","err","isMobile","document","documentElement","clientWidth","window","innerWidth","innerHeight","detectHW","detectSize","addEventListener","removeEventListener","_Fragment","fontWeight","letterSpacing","pl","IconButton","previousBulletin","sub","days","compareAsc","ArrowBackIosIcon","nextBulletin","ArrowForwardIosIcon","mt","PDFReader","AdminComponent","Fab","UploadIcon","mr","BulletinUploadModal","form","FormData","append","res","put","headers","revalidate","error","Snackbar","autoHideDuration","Alert","severity"],"sourceRoot":""}