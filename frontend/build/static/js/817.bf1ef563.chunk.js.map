{"version":3,"file":"static/js/817.bf1ef563.chunk.js","mappings":"gRAkBA,MAAMA,EAAkB,CACtBC,gBACE,4FAuGJ,EApGqBC,KACnB,IAAIC,GAAcC,EAAAA,EAAAA,MAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,aAAEC,IAAiBC,EAAAA,EAAAA,MACnB,GAAEC,EAAE,MAAEC,EAAK,KAAEC,EAAI,UAAEC,EAAS,IAAEC,IAAQC,EAAAA,EAAAA,MA6BtCC,EAAU,CACd,CAAEC,MAAMC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,IAAKC,KAAM,QAChC,CACEH,KAAMH,GAAMI,EAAAA,EAAAA,KAACG,EAAAA,EAAW,KAAMH,EAAAA,EAAAA,KAACI,EAAAA,EAAmB,IAClDF,KAAMN,EAAM,QAAU,MACtBS,QAhCoBC,UACtB,UACuBC,EAAAA,EAAMC,IAAI,qCAAsC,CACnEhB,GAAIA,EACJI,IAAKA,EAAM,EAAI,IAGjBV,EAAYuB,aACZnB,EAAa,UAAW,2CAC1B,CAAE,MAAOoB,GACPC,QAAQC,IAAIF,EACd,IAuBA,CAAEX,MAAMC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,IAAKX,KAAM,SAAUG,QApBfC,UACzB,UACuBC,EAAAA,EAAMO,OAAO,4CAADC,OACavB,IAG9CF,EAAa,UAAW,6CACxBF,EAAS,iBACX,CAAE,MAAOsB,GACPC,QAAQC,IAAIF,EACd,KAaF,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACElB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,gBAAgBC,MAAOrC,EAAgBmC,UACpDlB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,QAAOD,UACpBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CACTC,QAAQ,KACRC,WAAY,IACZC,GAAI,CAAEC,cAAe,QAASC,GAAI,QAASC,MAAO,SAAUT,SAC7D,kCAMLlB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,oBAAmBD,UAChCF,EAAAA,EAAAA,MAAA,OACEG,UAAU,YACVC,MAAO,CAAEQ,QAAS,OAAQC,cAAe,UAAWX,SAAA,CAE3C,IAARtB,IAAaI,EAAAA,EAAAA,KAACG,EAAAA,EAAW,CAACqB,GAAI,CAAEM,QAASlC,EAAM,EAAI,EAAGmC,GAAI,MAE3D/B,EAAAA,EAAAA,KAAA,MAAIoB,MAAO,CAAEY,UAAW,OAAQC,UAAW,aAAcf,SAAEzB,KAE3DO,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEY,UAAW,SAAUd,UAC9BgB,EAAAA,EAAAA,IAAO,IAAIC,KAAKxC,GAAY,iBAG/BK,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,KAERpC,EAAAA,EAAAA,KAAA,OACEmB,UAAU,UACVkB,wBAAyB,CACvBC,OAAQ5C,GAEV0B,MAAO,CAAEa,UAAW,iBAGtBjC,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACRC,UAAU,0BACVhB,GAAI,CAAEiB,SAAU,QAASC,OAAQ,GAAIC,MAAO,IAC5C5C,MAAMC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAa,IAAI1B,SAEvBpB,EAAQ+C,KAAKC,IACZ9C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAe,CAEdhD,KAAM+C,EAAO/C,KACbiD,aAAcF,EAAO5C,KACrBG,QAASyC,EAAOzC,SAHXyC,EAAO5C,iBASrB,C","sources":["pages/News/Announcements/Announcement.js"],"sourcesContent":["import {\r\n  Divider,\r\n  SpeedDial,\r\n  SpeedDialAction,\r\n  SpeedDialIcon,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useLoaderData, useNavigate, useRevalidator } from \"react-router-dom\";\r\nimport PushPinIcon from \"@mui/icons-material/PushPin\";\r\nimport PushPinOutlinedIcon from \"@mui/icons-material/PushPinOutlined\";\r\nimport EditNoteIcon from \"@mui/icons-material/EditNote\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport \"../../NextGen/NextGen.css\";\r\nimport axios from \"axios\";\r\nimport useSnackbar from \"../../../util/useSnackbar\";\r\n\r\nconst titleBackground = {\r\n  backgroundImage:\r\n    'linear-gradient(rgba(0, 0, 0, 0.30), rgba(0, 0, 0, 0.30)), url(\"/img/Announcements.jpg\")',\r\n};\r\n\r\nconst Announcement = () => {\r\n  let revalidator = useRevalidator();\r\n  const navigate = useNavigate();\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, title, body, timestamp, pin } = useLoaderData();\r\n\r\n  const pinAnnouncement = async () => {\r\n    try {\r\n      const result = await axios.put(\"/api/Announcements/pinAnnouncement\", {\r\n        id: id,\r\n        pin: pin ? 0 : 1,\r\n      });\r\n\r\n      revalidator.revalidate();\r\n      openSnackbar(\"success\", \"The announcement is successfully pinned!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteAnnouncement = async () => {\r\n    try {\r\n      const result = await axios.delete(\r\n        `/api/Announcements/deleteAnnouncement?id=${id}`\r\n      );\r\n\r\n      openSnackbar(\"success\", \"The announcement is successfully deleted!\");\r\n      navigate(\"/announcements\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    { icon: <EditNoteIcon />, name: \"Edit\" },\r\n    {\r\n      icon: pin ? <PushPinIcon /> : <PushPinOutlinedIcon />,\r\n      name: pin ? \"Unpin\" : \"Pin\",\r\n      onClick: pinAnnouncement,\r\n    },\r\n    { icon: <DeleteIcon />, name: \"Delete\", onClick: deleteAnnouncement },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title-wrapper\" style={titleBackground}>\r\n        <div className=\"title\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight={830}\r\n            sx={{ letterSpacing: \"0.4em\", pl: \"0.4em\", color: \"white\" }}\r\n          >\r\n            공지사항\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div\r\n          className=\"container\"\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          {pin === 1 && <PushPinIcon sx={{ opacity: pin ? 1 : 0, mr: 2 }} />}\r\n\r\n          <h1 style={{ textAlign: \"left\", wordBreak: \"break-all\" }}>{title}</h1>\r\n\r\n          <p style={{ textAlign: \"right\" }}>\r\n            {format(new Date(timestamp), \"yyyy/MM/dd\")}\r\n          </p>\r\n\r\n          <Divider />\r\n\r\n          <div\r\n            className=\"content\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: body,\r\n            }}\r\n            style={{ wordBreak: \"break-word\" }}\r\n          />\r\n\r\n          <SpeedDial\r\n            ariaLabel=\"SpeedDial basic example\"\r\n            sx={{ position: \"fixed\", bottom: 16, right: 16 }}\r\n            icon={<SpeedDialIcon />}\r\n          >\r\n            {actions.map((action) => (\r\n              <SpeedDialAction\r\n                key={action.name}\r\n                icon={action.icon}\r\n                tooltipTitle={action.name}\r\n                onClick={action.onClick}\r\n              />\r\n            ))}\r\n          </SpeedDial>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n"],"names":["titleBackground","backgroundImage","Announcement","revalidator","useRevalidator","navigate","useNavigate","openSnackbar","useSnackbar","id","title","body","timestamp","pin","useLoaderData","actions","icon","_jsx","EditNoteIcon","name","PushPinIcon","PushPinOutlinedIcon","onClick","async","axios","put","revalidate","error","console","log","DeleteIcon","delete","concat","_jsxs","_Fragment","children","className","style","Typography","variant","fontWeight","sx","letterSpacing","pl","color","display","flexDirection","opacity","mr","textAlign","wordBreak","format","Date","Divider","dangerouslySetInnerHTML","__html","SpeedDial","ariaLabel","position","bottom","right","SpeedDialIcon","map","action","SpeedDialAction","tooltipTitle"],"sourceRoot":""}