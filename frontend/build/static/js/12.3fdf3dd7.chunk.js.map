{"version":3,"file":"static/js/12.3fdf3dd7.chunk.js","mappings":"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","sources":["common/AdminComponent.js","components/Online/MeditationON/MeditationONImageListItem.js","components/Online/MeditationON/PreviewCard.js","components/Online/MeditationON/MeditationONModal.js","pages/Online/MeditationON/MeditationON.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst AdminComponent = (props) => {\r\n  const user = useSelector((state) => state.authToken.admin);\r\n\r\n  return user && props.children;\r\n};\r\n\r\nexport default AdminComponent;\r\n","import { ImageListItem } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MeditationONComp = ({ posts }) => {\r\n  return posts.map((post) => (\r\n    <ImageListItem key={post.ID} component={Link} to={post.ID}>\r\n      <img\r\n        src={`https://imagedelivery.net/ICo2WI8PXO_BVRlWfwzOww/${post.Cover}/thumbnail`}\r\n        alt=\"thumbnail\"\r\n        loading=\"lazy\"\r\n      />\r\n    </ImageListItem>\r\n  ));\r\n};\r\n\r\nexport const MemoizedMeditationONComp = memo(MeditationONComp);\r\n","import { IconButton } from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { useRef } from \"react\";\r\n\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nconst PreviewCard = ({ id, image, index, movePhoto, removeImage }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: \"previewcard\",\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const opacity = isDragging ? 0.7 : 1;\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: \"previewcard\",\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.left - hoverBoundingRect.right) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.x - hoverBoundingRect.left;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Time to actually perform the action\r\n      movePhoto(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n        borderRadius: 2,\r\n        border: \"1px solid #eaeaea\",\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: \"calc(90%/3)\",\r\n        aspectRatio: \"1/1\",\r\n        boxSizing: \"border-box\",\r\n        cursor: \"move\",\r\n        opacity,\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt=\"preview\"\r\n        style={{\r\n          display: \"block\",\r\n          width: \"auto\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n      <IconButton\r\n        sx={{\r\n          position: \"absolute\",\r\n          display: \"block\",\r\n          zIndex: 99,\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: \"orange\",\r\n        }}\r\n        onClick={() => removeImage(index)}\r\n      >\r\n        <ClearIcon sx={{ color: \"black\" }} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Modal,\r\n  Snackbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport update from \"immutability-helper\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport PreviewCard from \"./PreviewCard\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"80vw\",\r\n  height: \"80vh\",\r\n  maxWidth: \"1300px\",\r\n  bgcolor: \"#ffffff\",\r\n  boxShadow: 24,\r\n  borderRadius: \"0.5em\",\r\n  p: 1,\r\n  py: 5,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nconst MeditationONModal = ({ openModal, setOpenModal }) => {\r\n  const handleClose = () => {\r\n    removeAllImage();\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const [filesToUpload, setFilesToUpload] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const handleChangeFile = (files) => {\r\n    setFilesToUpload((prev) => [...prev, ...files]);\r\n    files.forEach((image) => {\r\n      setImagesPreview((prev) =>\r\n        update(prev, { $push: [URL.createObjectURL(image)] })\r\n      );\r\n      // setImagesPreview((prev) => [...prev, URL.createObjectURL(image)]);\r\n    });\r\n  };\r\n\r\n  const uploadImages = async () => {\r\n    const form = new FormData();\r\n\r\n    filesToUpload.forEach((image) => {\r\n      form.append(\"images\", image);\r\n    });\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const result = await axios.post(\"/api/meditationON/uploadImage\", form, {\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data`,\r\n        },\r\n      });\r\n\r\n      setIsSuccessSnackBarOpen(true);\r\n      setLoading(false);\r\n      handleClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const removeImage = (i) => {\r\n    URL.revokeObjectURL(imagesPreview[i]);\r\n    setFilesToUpload((prev) =>\r\n      update(prev, {\r\n        $splice: [[i, 1]],\r\n      })\r\n    );\r\n    setImagesPreview((prev) =>\r\n      update(prev, {\r\n        $splice: [[i, 1]],\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeAllImage = () => {\r\n    imagesPreview.forEach((preview) => URL.revokeObjectURL(preview));\r\n    setFilesToUpload([]);\r\n    setImagesPreview([]);\r\n  };\r\n\r\n  const movePhoto = useCallback((dragIndex, hoverIndex) => {\r\n    setFilesToUpload((prev) =>\r\n      update(prev, {\r\n        $splice: [\r\n          [dragIndex, 1],\r\n          [hoverIndex, 0, prev[dragIndex]],\r\n        ],\r\n      })\r\n    );\r\n    setImagesPreview((prev) =>\r\n      update(prev, {\r\n        $splice: [\r\n          [dragIndex, 1],\r\n          [hoverIndex, 0, prev[dragIndex]],\r\n        ],\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: {\r\n      \"image/*\": [],\r\n    },\r\n    onDrop: (acceptedFiles) => {\r\n      handleChangeFile(acceptedFiles);\r\n    },\r\n    noDragEventsBubbling: true,\r\n  });\r\n\r\n  const renderCard = useCallback((image, index) => {\r\n    return (\r\n      <PreviewCard\r\n        key={index}\r\n        index={index}\r\n        image={image}\r\n        movePhoto={movePhoto}\r\n        removeImage={removeImage}\r\n      />\r\n    );\r\n  }, []);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSuccessSnackBarOpen, setIsSuccessSnackBarOpen] = useState(false);\r\n  const handleSnackBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setIsSuccessSnackBarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        // aria-labelledby=\"modal-modal-title\"\r\n        // aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style} bgcolor=\"white\">\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <>\r\n              <DndProvider backend={HTML5Backend}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flexWrap: \"wrap\",\r\n                    alignContent: \"flex-start\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"10pt\",\r\n                    width: \"95%\",\r\n                    height: \"75%\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                >\r\n                  {imagesPreview.map((image, index) =>\r\n                    renderCard(image, index)\r\n                  )}\r\n                </div>\r\n              </DndProvider>\r\n\r\n              <div\r\n                style={{\r\n                  width: \"95%\",\r\n                  height: \"20%\",\r\n                  border: \"1pt dotted #f57c00\",\r\n                  borderRadius: \"1em\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <Box\r\n                  sx={{\r\n                    position: \"relative\",\r\n                    height: \"100%\",\r\n                    widht: \"100%\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%, -50%)\",\r\n                    }}\r\n                  >\r\n                    <AddCircleOutlineIcon fontSize=\"large\" color=\"primary\" />\r\n                    <Typography>Click or Drag Files to here</Typography>\r\n                  </div>\r\n                </Box>\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\", marginTop: \"2em\" }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  disabled={filesToUpload.length <= 0}\r\n                  onClick={uploadImages}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={removeAllImage}\r\n                  disabled={filesToUpload.length <= 0}\r\n                >\r\n                  Clear All\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Snackbar\r\n        open={isSuccessSnackBarOpen}\r\n        autoHideDuration={8000}\r\n        onClose={handleSnackBarClose}\r\n      >\r\n        <Alert severity=\"success\" onClose={handleSnackBarClose}>\r\n          Uploaded Succesfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MeditationONModal;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport {\r\n  CircularProgress,\r\n  Fab,\r\n  ImageList,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport axios from \"axios\";\r\nimport { MemoizedMeditationONComp } from \"../../../components/Online/MeditationON/MeditationONImageListItem\";\r\nimport MeditationONModal from \"../../../components/Online/MeditationON/MeditationONModal\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport \"../../NextGen/NextGen.css\";\r\nimport AdminComponent from \"../../../common/AdminComponent\";\r\nimport Footer from \"../../../header/Footer\";\r\n\r\nconst PAGE_SIZE = 12;\r\nconst titleBackground = {\r\n  backgroundImage:\r\n    'linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.45)), url(\"/img/Online/MeditationON.webp\")',\r\n};\r\n\r\nconst MeditationON = () => {\r\n  const matches = useMediaQuery(\"(min-width:1200px)\");\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [end, setEnd] = useState(false);\r\n  const [restored, setRestored] = useState(null);\r\n\r\n  const getPosts = async () => {\r\n    console.log(\"test getPosts\");\r\n\r\n    const result = await axios.get(\r\n      `/api/MeditationON/getPosts${\r\n        posts.length === 0\r\n          ? \"\"\r\n          : `?lastVisible=${posts.at(-1).ID}&timeStamp=${\r\n              posts.at(-1).Timestamp\r\n            }`\r\n      }`\r\n    );\r\n\r\n    if (result.data.length > 0) {\r\n      setPosts((prev) => [...prev, ...result.data]);\r\n    } else {\r\n      setEnd(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (posts.length % PAGE_SIZE !== 0) {\r\n      setEnd(true);\r\n    }\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    window.onpopstate = () => {\r\n      setRestored(true);\r\n      console.log(\"test restore\");\r\n      setPosts(JSON.parse(sessionStorage.getItem(\"posts\")));\r\n    };\r\n    setRestored(false);\r\n    return () => {\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (restored !== null && !restored) {\r\n      getPosts();\r\n    }\r\n  }, [restored]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      sessionStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    };\r\n  });\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current && !end && posts.length >= 12) {\r\n      setTimeout(() => {\r\n        try {\r\n          const contentHeight = scrollRef.current.clientHeight;\r\n          const screenHeight = window.innerHeight - 500;\r\n\r\n          console.log(\"test content\", contentHeight);\r\n          console.log(\"test screen\", screenHeight);\r\n\r\n          if (contentHeight > 100 && contentHeight < screenHeight) {\r\n            getPosts();\r\n          }\r\n        } catch (error) {}\r\n      }, 500);\r\n    }\r\n\r\n    // re-run effect when items change\r\n  }, [posts]);\r\n\r\n  console.log(end);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title-wrapper\" style={titleBackground}>\r\n        <div className=\"title\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight={830}\r\n            sx={{ letterSpacing: \"0.4em\", pl: \"0.4em\", color: \"white\" }}\r\n          >\r\n            묵상 ON\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            paddingLeft: \"0.2em\",\r\n            paddingRight: \"0.2em\",\r\n            marginTop: \"0.2em\",\r\n          }}\r\n        >\r\n          {posts.length > 0 ? (\r\n            <InfiniteScroll\r\n              dataLength={posts.length}\r\n              next={getPosts}\r\n              hasMore={!end}\r\n              loader={<CircularProgress />}\r\n              scrollThreshold={1}\r\n              style={{ overflowY: \"hidden\" }}\r\n            >\r\n              {\r\n                <ImageList\r\n                  ref={scrollRef}\r\n                  sx={{ mx: \"0.5rem\" }}\r\n                  cols={matches ? 4 : 3}\r\n                  gap={2.5}\r\n                >\r\n                  <MemoizedMeditationONComp posts={posts} />\r\n                </ImageList>\r\n              }\r\n            </InfiniteScroll>\r\n          ) : (\r\n            <CircularProgress />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AdminComponent>\r\n        <Fab\r\n          variant=\"primary\"\r\n          style={{ position: \"fixed\", right: \"2vw\", bottom: \"3vh\" }}\r\n          onClick={handleOpen}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n\r\n        <MeditationONModal openModal={openModal} setOpenModal={setOpenModal} />\r\n      </AdminComponent>\r\n\r\n      {/* {end && <Footer />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MeditationON;\r\n"],"names":["props","useSelector","state","authToken","admin","children","MeditationONComp","_ref","posts","map","post","_jsx","ImageListItem","component","Link","to","ID","src","concat","Cover","alt","loading","MemoizedMeditationONComp","memo","id","image","index","movePhoto","removeImage","ref","useRef","isDragging","drag","useDrag","type","item","collect","monitor","opacity","handlerId","drop","useDrop","accept","getHandlerId","hover","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","left","right","hoverClientY","getClientOffset","x","_jsxs","style","position","display","borderRadius","border","marginBottom","marginRight","width","aspectRatio","boxSizing","cursor","overflow","height","IconButton","sx","zIndex","top","backgroundColor","onClick","ClearIcon","color","transform","maxWidth","bgcolor","boxShadow","p","py","flexDirection","alignItems","justifyContent","openModal","setOpenModal","handleClose","removeAllImage","filesToUpload","setFilesToUpload","useState","imagesPreview","setImagesPreview","i","URL","revokeObjectURL","prev","update","$splice","forEach","preview","useCallback","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","files","$push","createObjectURL","noDragEventsBubbling","renderCard","PreviewCard","setLoading","isSuccessSnackBarOpen","setIsSuccessSnackBarOpen","handleSnackBarClose","event","reason","_Fragment","Modal","open","onClose","Box","CircularProgress","DndProvider","backend","HTML5Backend","flexWrap","alignContent","margin","overflowX","overflowY","widht","AddCircleOutlineIcon","fontSize","Typography","marginTop","Button","variant","disabled","length","async","form","FormData","append","axios","headers","error","console","log","Snackbar","autoHideDuration","Alert","severity","titleBackground","backgroundImage","MeditationON","matches","useMediaQuery","setPosts","end","setEnd","restored","setRestored","getPosts","result","get","at","Timestamp","data","useEffect","window","onpopstate","JSON","parse","sessionStorage","getItem","setItem","stringify","scrollRef","setTimeout","contentHeight","clientHeight","screenHeight","innerHeight","className","fontWeight","letterSpacing","pl","paddingLeft","paddingRight","InfiniteScroll","dataLength","next","hasMore","loader","scrollThreshold","ImageList","mx","cols","gap","AdminComponent","Fab","bottom","handleOpen","AddIcon","MeditationONModal"],"sourceRoot":""}