{"version":3,"file":"static/js/486.c8023388.chunk.js","mappings":"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","sources":["api/announcements.js","components/News/Announcement/AnnouncementPostModal.js","../node_modules/@mui/icons-material/esm/PushPinOutlined.js","pages/News/Announcements/Announcement.js","../node_modules/@mui/icons-material/esm/PushPin.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { uploadImage } from \"./images\";\r\n\r\nexport const postAnnouncement = async (id, title, body) => {\r\n  const regex = /(<img[^>]+src=\")([^\">]+)\"/g;\r\n  const matches = Array.from(body.matchAll(regex));\r\n\r\n  const uploadPromises = matches.map(async (match) => {\r\n    // Collect promises\r\n    const src = match[2];\r\n    if (!src.startsWith(\"https://\")) {\r\n      return uploadImage(src); // Return the promise directly\r\n    } else {\r\n      return src.split(\"/\").at(-2); // Return existing ID immediately\r\n    }\r\n  });\r\n\r\n  const imageIDs = await Promise.all(uploadPromises); // Wait for all uploads\r\n\r\n  const replacements = matches.map((match, index) => {\r\n    const imageID = imageIDs[index];\r\n    const replacement = `https://imagedelivery.net/ICo2WI8PXO_BVRlWfwzOww/${imageID}/Announcements`;\r\n    return { original: match[0], replacement: `${match[1]}${replacement}\"` };\r\n  });\r\n\r\n  let modifiedBody = body;\r\n\r\n  for (const { original, replacement } of replacements) {\r\n    modifiedBody = modifiedBody.replace(original, replacement);\r\n  }\r\n\r\n  const iframeRegex = /<iframe\\s+[^>]*>/i;\r\n  const hasVideo = iframeRegex.test(modifiedBody);\r\n\r\n  try {\r\n    await axios.put(\r\n      id\r\n        ? `/api/announcements/announcement/${id}`\r\n        : \"/api/announcements/announcement\",\r\n      {\r\n        title: title,\r\n        body: modifiedBody,\r\n        images: imageIDs,\r\n        // image: imageIDs.length > 0 ? true : false,\r\n        video: hasVideo ? 1 : 0,\r\n      }\r\n    );\r\n  } catch {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const deleteAnnouncement = async (id) => {\r\n  try {\r\n    await axios.delete(`/api/announcements/announcement/${id}`);\r\n  } catch {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const pinAnnouncement = async (id, pin) => {\r\n  try {\r\n    await axios.put(`/api/announcements/announcement/${id}/pin`, {\r\n      pin: !pin ? 1 : 0,\r\n    });\r\n  } catch {\r\n    throw new Error();\r\n  }\r\n};\r\n","import { Button, CircularProgress, TextField } from \"@mui/material\";\r\nimport TextEditor from \"./TextEditor\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport useSnackbar from \"../../../util/useSnackbar\";\r\nimport { postAnnouncement } from \"../../../api/announcements\";\r\nimport CustomModal from \"../../../common/CustomModal\";\r\n\r\nconst AnnouncementPostModal = ({\r\n  isOpen,\r\n  onClose,\r\n  revalidator,\r\n  id,\r\n  origTitle,\r\n  origBody,\r\n}) => {\r\n  const { openSnackbar } = useSnackbar();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [title, setTitle] = useState(origTitle);\r\n  const [body, setBody] = useState(origBody);\r\n\r\n  const onSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await postAnnouncement(id, title, body);\r\n\r\n      revalidator();\r\n      openSnackbar(\"success\", \"The announcement is successfully posted!\");\r\n      handleClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n      openSnackbar(\r\n        \"error\",\r\n        \"Error Occured. Please contact to the administrator.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(origTitle);\r\n    setBody(origBody);\r\n  }, [origTitle, origBody]);\r\n\r\n  const handleClose = () => {\r\n    setTitle(origTitle);\r\n    setBody(origBody);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      maxWidth=\"1300px\"\r\n      maxHeight=\"90svh\"\r\n    >\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            value={title}\r\n            fullWidth\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <div style={{ height: \"65svh\", width: \"100%\", marginTop: \"1em\" }}>\r\n            <TextEditor body={body} getBody={setBody} />\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            disabled={title.trim() === \"\" || body.trim() === \"\"}\r\n            onClick={onSubmit}\r\n            fullWidth\r\n            sx={{ marginTop: \"1.5em\" }}\r\n          >\r\n            Post\r\n          </Button>\r\n        </>\r\n      )}\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPostModal;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 4v5c0 1.12.37 2.16 1 3H9c.65-.86 1-1.9 1-3V4zm3-2H7c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 1.66-1.34 3-3 3v2h5.97v7l1 1 1-1v-7H19v-2c-1.66 0-3-1.34-3-3V4h1c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'PushPinOutlined');","import {\r\n  Divider,\r\n  SpeedDial,\r\n  SpeedDialAction,\r\n  SpeedDialIcon,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useLoaderData, useNavigate, useRevalidator } from \"react-router-dom\";\r\nimport PushPinIcon from \"@mui/icons-material/PushPin\";\r\nimport PushPinOutlinedIcon from \"@mui/icons-material/PushPinOutlined\";\r\nimport EditNoteIcon from \"@mui/icons-material/EditNote\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport useSnackbar from \"../../../util/useSnackbar\";\r\nimport { useState } from \"react\";\r\nimport FullScreenLoading from \"../../../common/FullScreenLoading\";\r\n\r\nimport AdminComponent from \"../../../common/AdminComponent\";\r\nimport useModals from \"../../../util/useModal\";\r\nimport AnnouncementPostModal from \"../../../components/News/Announcement/AnnouncementPostModal\";\r\nimport {\r\n  deleteAnnouncement,\r\n  pinAnnouncement,\r\n} from \"../../../api/announcements\";\r\n\r\nimport \"../../NextGen/NextGen.css\";\r\nimport \"./content-styles.css\";\r\n\r\nconst titleBackground = {\r\n  backgroundImage:\r\n    'linear-gradient(rgba(0, 0, 0, 0.30), rgba(0, 0, 0, 0.30)), url(\"/img/News/Announcements/Announcements.jpg\")',\r\n};\r\n\r\nconst Announcement = () => {\r\n  let revalidator = useRevalidator();\r\n  const navigate = useNavigate();\r\n  const { openModal } = useModals();\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, title, body, timestamp, pin } = useLoaderData();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onPin = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await pinAnnouncement(id, pin);\r\n\r\n      revalidator.revalidate();\r\n      openSnackbar(\r\n        \"success\",\r\n        `The announcement is successfully ${pin ? \"unpinned\" : \"pinned\"}`\r\n      );\r\n    } catch (error) {\r\n      openSnackbar(\r\n        \"error\",\r\n        \"Error Occured. Please contact to the administrator.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await deleteAnnouncement(id);\r\n\r\n      openSnackbar(\"success\", \"The announcement is successfully deleted!\");\r\n      navigate(\"/announcements\");\r\n    } catch {\r\n      openSnackbar(\r\n        \"error\",\r\n        \"Error Occured. Please contact to the administrator.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      icon: <EditNoteIcon />,\r\n      name: \"Edit\",\r\n      onClick: () =>\r\n        openModal(AnnouncementPostModal, {\r\n          revalidator: revalidator.revalidate,\r\n          id: id,\r\n          origTitle: title,\r\n          origBody: body,\r\n        }),\r\n    },\r\n    {\r\n      icon: pin ? <PushPinIcon /> : <PushPinOutlinedIcon />,\r\n      name: pin ? \"Unpin\" : \"Pin\",\r\n      onClick: onPin,\r\n    },\r\n    { icon: <DeleteIcon />, name: \"Delete\", onClick: onDelete },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <FullScreenLoading />}\r\n\r\n      <div className=\"title-wrapper\" style={titleBackground}>\r\n        <div className=\"title\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight={830}\r\n            sx={{ letterSpacing: \"0.4em\", pl: \"0.4em\", color: \"white\" }}\r\n          >\r\n            공지사항\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div\r\n          className=\"container\"\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          {pin === 1 && <PushPinIcon sx={{ opacity: pin ? 1 : 0, mr: 2 }} />}\r\n\r\n          <h1 style={{ textAlign: \"left\", wordBreak: \"break-all\" }}>{title}</h1>\r\n\r\n          <p style={{ textAlign: \"right\" }}>\r\n            {format(new Date(timestamp), \"yyyy/MM/dd\")}\r\n          </p>\r\n\r\n          <Divider />\r\n\r\n          <div\r\n            className=\"ck-content\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: body,\r\n            }}\r\n            style={{ wordBreak: \"break-word\" }}\r\n          />\r\n\r\n          <AdminComponent>\r\n            <SpeedDial\r\n              ariaLabel=\"SpeedDial basic example\"\r\n              sx={{ position: \"fixed\", bottom: 16, right: 16 }}\r\n              icon={<SpeedDialIcon />}\r\n            >\r\n              {actions.map((action) => (\r\n                <SpeedDialAction\r\n                  key={action.name}\r\n                  icon={action.icon}\r\n                  tooltipTitle={action.name}\r\n                  onClick={action.onClick}\r\n                />\r\n              ))}\r\n            </SpeedDial>\r\n          </AdminComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16 9V4h1c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 1.66-1.34 3-3 3v2h5.97v7l1 1 1-1v-7H19v-2c-1.66 0-3-1.34-3-3\"\n}), 'PushPin');"],"names":["postAnnouncement","async","id","title","body","matches","Array","from","matchAll","uploadPromises","map","src","match","startsWith","split","at","uploadImage","imageIDs","Promise","all","replacements","index","replacement","original","modifiedBody","replace","hasVideo","test","axios","put","images","video","Error","deleteAnnouncement","delete","pinAnnouncement","pin","_ref","isOpen","onClose","revalidator","origTitle","origBody","openSnackbar","useSnackbar","loading","setLoading","useState","setTitle","setBody","useEffect","handleClose","_jsx","CustomModal","maxWidth","maxHeight","children","CircularProgress","_jsxs","_Fragment","TextField","label","variant","value","fullWidth","onChange","e","target","required","style","height","width","marginTop","TextEditor","getBody","Button","disabled","trim","onClick","error","console","log","sx","createSvgIcon","d","titleBackground","backgroundImage","Announcement","useRevalidator","navigate","useNavigate","openModal","useModals","timestamp","useLoaderData","isLoading","setIsLoading","actions","icon","EditNoteIcon","name","AnnouncementPostModal","revalidate","PushPinIcon","PushPinOutlinedIcon","DeleteIcon","FullScreenLoading","className","Typography","fontWeight","letterSpacing","pl","color","display","flexDirection","opacity","mr","textAlign","wordBreak","format","Date","Divider","dangerouslySetInnerHTML","__html","AdminComponent","SpeedDial","ariaLabel","position","bottom","right","SpeedDialIcon","action","SpeedDialAction","tooltipTitle","fillRule"],"sourceRoot":""}