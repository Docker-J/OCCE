{"version":3,"file":"static/js/859.53a083b0.chunk.js","mappings":"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","sources":["pages/Online/MeditationONComp.js","pages/Online/MeditationONModal.js","pages/Online/MeditationON.js"],"sourcesContent":["import { ImageList, ImageListItem } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MeditationONComp = ({ posts }) => {\r\n  return posts.map((post) => (\r\n    <ImageListItem key={post.id} component={Link} to={post.id}>\r\n      <img\r\n        // src={`${\r\n        //   item.data().images[0]\r\n        // }?w=164&h=164&fit=crop&auto=format`}\r\n        src={post[\"0\"]}\r\n        // onClick={}\r\n        // srcSet={`${\r\n        //   item.data().images[0]\r\n        // }?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n        alt=\"test\"\r\n        loading=\"lazy\"\r\n      />\r\n    </ImageListItem>\r\n  ));\r\n};\r\n\r\nexport const MemoizedMeditationONComp = memo(MeditationONComp);\r\n","import { Box, Button, Modal } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nconst MeditationONModal = ({ openModal, setOpenModal }) => {\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"800px\",\r\n    height: \"800px\",\r\n    bgcolor: \"#ffffff\",\r\n    border: \"0.1px solid #f57c00\",\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFilesToUpload([]);\r\n    setImagesPreview([]);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const [filesToUpload, setFilesToUpload] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const handleChangeFile = (e) => {\r\n    setFilesToUpload(e.target.files);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Array.from(filesToUpload).forEach((image) => {\r\n      setImagesPreview((prev) => [prev.push, URL.createObjectURL(image)]);\r\n    });\r\n  }, [filesToUpload]);\r\n\r\n  async function imgToBase64() {\r\n    return new Promise((resolve) => {\r\n      let images = [];\r\n      for (let i = 0; i < filesToUpload.length; i++) {\r\n        fileToBase64(filesToUpload[i], (err, result) => {\r\n          images.push(result);\r\n          if (i === filesToUpload.length - 1) {\r\n            resolve(images);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const uploadFiles = () => {\r\n    imgToBase64().then((result) => {\r\n      post(result);\r\n    });\r\n  };\r\n\r\n  async function post(images) {\r\n    const data = {};\r\n    for (let i = 0; i < images.length; i++) {\r\n      data[i] = images.shift();\r\n    }\r\n    const test = await axios.post(\"/api/meditationON/uploadPost\", {\r\n      images: data,\r\n    });\r\n  }\r\n\r\n  const fileToBase64 = async (file, cb) => {\r\n    const compressedImage = await imageCompression(file, { maxSizeMB: 0.1 });\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(compressedImage);\r\n    reader.onload = function() {\r\n      cb(null, reader.result);\r\n    };\r\n    reader.onerror = function(error) {\r\n      cb(error, null);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      // aria-labelledby=\"modal-modal-title\"\r\n      // aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style} bgcolor=\"white\">\r\n        <div style={{ display: \"flex\" }}>\r\n          {imagesPreview.map((image) => (\r\n            <img src={image} />\r\n          ))}\r\n        </div>\r\n\r\n        <Button variant=\"contained\" component=\"label\">\r\n          Upload\r\n          <input\r\n            hidden\r\n            accept=\"image/*\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(e) => handleChangeFile(e)}\r\n          />\r\n        </Button>\r\n\r\n        <Button onClick={uploadFiles} variant=\"contained\" component=\"label\">\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MeditationONModal;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { CircularProgress, Fab, ImageList } from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport axios from \"axios\";\r\nimport { MemoizedMeditationONComp } from \"./MeditationONComp\";\r\nimport MeditationONModal from \"./MeditationONModal\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst PAGE_SIZE = 12;\r\n\r\nconst MeditationON = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [end, setEnd] = useState(false);\r\n  const [restored, setRestored] = useState(true);\r\n\r\n  const getPosts = async () => {\r\n    console.log(\"test getPosts\");\r\n\r\n    const result = await axios.get(\r\n      `/api/MeditationON/getPosts${\r\n        posts.length === 0 ? \"\" : `?lastVisible=${posts.at(-1).id}`\r\n      }`\r\n    );\r\n    setPosts((prev) => [...prev, ...result.data]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (posts.length % PAGE_SIZE !== 0) {\r\n      setEnd(true);\r\n    }\r\n  }, [posts]);\r\n\r\n  // const handlePopstate = (event) => {\r\n  //   console.log(\"test back\");\r\n  //   // Check if the popstate event was triggered by the back or forward button\r\n  //   if (event.state !== null) {\r\n  //     // Perform your desired action here\r\n  //     // For example, you can call getPosts() here\r\n  //     restore();\r\n  //   }\r\n  // };\r\n\r\n  // function handlePopstate(event) {\r\n  //   if (event.state !== null) {\r\n  //     console.log(\"test back\");\r\n  //     restore();\r\n  //   } else {\r\n  //     getPosts();\r\n  //   }\r\n  // }\r\n\r\n  const restore = () => {\r\n    setRestored(true);\r\n    console.log(\"test restore\");\r\n    setPosts(JSON.parse(sessionStorage.getItem(\"posts\")));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   window.addEventListener(\"popstate\", (event) => handlePopstate(event));\r\n\r\n  //   if (performance.getEntriesByType(\"navigation\")[0].type === \"reload\") {\r\n  //     getPosts();\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     window.removeEventListener(\"popstate\", () => handlePopstate());\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    window.onpopstate = () => {\r\n      restore();\r\n    };\r\n    setRestored(false);\r\n    return () => {\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!restored) {\r\n      getPosts();\r\n    }\r\n  }, [restored]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      sessionStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    };\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (fetcher.data && fetcher.data.length > 0) {\r\n  //     setPosts((prevPosts) => [...prevPosts, ...fetcher.data]);\r\n  //     searchParams.set(\"page\", Number(searchParams.get(\"page\")) + 1);\r\n  //     setSearchParams(searchParams);\r\n  //   }\r\n  // }, [fetcher.data]);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>묵상 ON</h1>\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          maxWidth: \"1500px\",\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n        }}\r\n      >\r\n        {posts.length !== 0 ? (\r\n          <InfiniteScroll\r\n            dataLength={posts.length}\r\n            next={getPosts}\r\n            hasMore={!end}\r\n            loader={<CircularProgress />}\r\n            scrollThreshold={0.75}\r\n            // scrollableTarget=\"scrollableDiv\"\r\n            style={{ overflowY: \"hidden\" }}\r\n          >\r\n            {\r\n              <ImageList sx={{ mx: \"0.5rem\" }} cols={3} gap={2.5}>\r\n                <MemoizedMeditationONComp posts={posts} />\r\n              </ImageList>\r\n            }\r\n          </InfiniteScroll>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </div>\r\n      <Fab\r\n        variant=\"primary\"\r\n        style={{ position: \"fixed\", right: \"2vw\", bottom: \"3vh\" }}\r\n        onClick={handleOpen}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <MeditationONModal openModal={openModal} setOpenModal={setOpenModal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MeditationON;\r\n"],"names":["MeditationONComp","_ref","posts","map","post","_jsx","ImageListItem","component","Link","to","id","children","src","alt","loading","MemoizedMeditationONComp","memo","openModal","setOpenModal","_useState","useState","_useState2","_slicedToArray","filesToUpload","setFilesToUpload","_useState3","_useState4","imagesPreview","setImagesPreview","_imgToBase","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","Promise","resolve","images","_loop","i","fileToBase64","err","result","push","length","stop","apply","arguments","useEffect","Array","from","forEach","image","URL","createObjectURL","_post","_callee3","data","_context3","shift","axios","sent","_ref2","_callee","file","cb","compressedImage","reader","_context","imageCompression","maxSizeMB","FileReader","readAsDataURL","onload","onerror","error","_x2","_x3","Modal","open","onClose","_jsxs","Box","sx","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","style","display","Button","variant","hidden","accept","multiple","type","onChange","e","target","files","handleChangeFile","onClick","imgToBase64","then","_x","setPosts","end","setEnd","_useState5","_useState6","restored","setRestored","getPosts","console","log","concat","at","_toConsumableArray","window","onpopstate","JSON","parse","sessionStorage","getItem","setItem","stringify","_useState7","_useState8","_Fragment","maxWidth","InfiniteScroll","dataLength","hasMore","loader","CircularProgress","scrollThreshold","overflowY","ImageList","mx","cols","gap","Fab","right","bottom","AddIcon","MeditationONModal"],"sourceRoot":""}